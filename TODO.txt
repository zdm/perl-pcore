- user token management;
- user permissions management;

- drop auth cache on API disconnect;


- create API Auth functions documentations:
    - what each function do;
    - what it should do internally (flush cache, etc...);

- remove basic auth;
- rewiew API methods;

---------------------------------------------------

- src - cut to base dir;

- dist.perl -> dist.ini - ??? - will be impossible to use functions;
- --version command is broken in docker container;

https://metacpan.org/pod/Tie::Hash::LRU
use Cpanel::JSON::XS instead of JSON::XS;

- proc:
    - proc should return result object on exit;
    - reliable way to read stdout on proc exit;

- Pcore::AE::Handle2:
    - handle should return errors using standard result object;

- redesign HTTP ua;
    - cookies - remove support for pub. suffixes, this is useless overhead;
    - headers shoud be always ArrayRef and in 'Header-Name' format;
    - http_timeout works incorrectly, should be timeout for whole request, currently only timeout between read operation;
    - use common connection status + reason errors registry, read headers error, connet error, proxy errors, etc ...;

- error add/remove dist files after committing wiki;

- API applications connector;

- app permissions, auth_app, etc...;

- api protocol:
    - runas => [ $token_type, $token_id, $private_token ];

-----------------------------------------------------------------------------------------------

- websocket RPC bin protocol:
    - [headers length, cbor headers, cbor body];
    - allows to decode headers and return body to client;

- APP & APP API:
    - move roles and permissions from API to App;
    - auth tags;
    - stack similar requests everywhere;

    - blocking api call;
    - api client - blocking call;
    - blocking api auth methods;

- HANDLE and PROXY refactoring
    - rename -> timeout -> http_timeout, keepalive_timeout -> http_keep...;

    - Pcore::AE::Handle - use reason instead of message in error callbacks;
    - http - do not use header object, use direct cache;
