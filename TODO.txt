- authentication + tags;
- is root;
- auth session;
- auth user token;
- auth user;



- create user + permisisons;
- update user + permissions;
- remove user;


- sqlite github issues;

- optimize api sqlite functions;
- add permissions methods;
- use transactions, where possible;

- API auth - CRUD methods;

- app permissions -> enabled -> accepted;
- app role - leave enabled, remove enabled from user_permissions, user_token_permissions, user_session;

- app id, user id - uuid;
    - implement user name, app name, role name, user password restrictions;
    - how to separate user name from user id if id will be a uuid???;
    - how to identify root user:
        - user_id == 1;
        - user name eq 'root';
        - 'root' is reserved user name;

- user session token;

- ExtJS fields error - status 200, success FALSE;

-----------------------------------------------------------------------------------------------

- APP & APP API:
    - move roles and permissions from API to App;
    - auth tags;
    - stack similar requests everywhere;

    - blocking api call;
    - api client - blocking call;
    - blocking api auth methods;

- RPC
    - combine RPC + WebSocket;
        - bidirectional API protocol;
        - WebSocket message broker;

- SQL:
    - error handling;
    - return API response;

- LOG SUBSYSTEM:
    - write logs to socket;

- HANDLE and PROXY refactoring
    - use common connection status + reason errors registry, read headers error, connet error, proxy errors, etc ...;

    - pcore::ae::handle - use reason instead of message in error callbacks;
    - http - do not use header object, use direct cache;
    - persistent -> keepalive_timeout in HTTP client;
