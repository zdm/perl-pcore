- cleanup API methods;


- authentication tags;
- app permissions, auth_app, etc...;
- API auth - CRUD methods ???;

- ExtJS fields error - status 200, success FALSE;

-----------------------------------------------------------------------------------------------

- APP & APP API:
    - move roles and permissions from API to App;
    - auth tags;
    - stack similar requests everywhere;

    - blocking api call;
    - api client - blocking call;
    - blocking api auth methods;

- RPC
    - combine RPC + WebSocket;
        - bidirectional API protocol;
        - WebSocket message broker;

- SQL:
    - error handling;
    - return API response;

- LOG SUBSYSTEM:
    - write logs to socket;

- HANDLE and PROXY refactoring
    - use common connection status + reason errors registry, read headers error, connet error, proxy errors, etc ...;

    - pcore::ae::handle - use reason instead of message in error callbacks;
    - http - do not use header object, use direct cache;
    - persistent -> keepalive_timeout in HTTP client;
